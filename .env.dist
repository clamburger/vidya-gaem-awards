# This file is a "template" of which env vars need to be defined for your application
# Copy this file to .env file for development, create environment variables when deploying to production
# https://symfony.com/doc/current/best_practices/configuration.html#infrastructure-related-configuration

###> symfony/framework-bundle ###
APP_ENV=dev
APP_SECRET=28adfa1448f3da59934b0f9a0a7ae075
#TRUSTED_PROXIES=127.0.0.1,127.0.0.2
#TRUSTED_HOSTS=localhost,example.com
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
# Format described at http://docs.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# For an SQLite database, use: "sqlite:///%kernel.project_dir%/var/data.db"
# Configure your db driver and server_version in config/packages/doctrine.yaml
DATABASE_URL=mysql://db_user:db_password@127.0.0.1:3306/db_name
###< doctrine/doctrine-bundle ###

###> knojector/steam-authentication-bundle ###
STEAM_API_KEY=
###< knojector/steam-authentication-bundle ###

# Determines if the result generator can be enabled/disabled from the frontend by automatically adjusting cron entries.
# If the `crontab` binary is not available on your machine, you should leave this as false.
CRON_JOB_MANAGEMENT=false

# Controls whether templates can be dynamically loaded from the database. You should leave this as false if you
# haven't yet finished the database setup, as `composer install` or `bin/console cache:clear` will throw an error if
# this is set to true but the database or database table isn't accessible.
DYNAMIC_TEMPLATES=false
